{"ast":null,"code":"import _objectSpread from \"/Users/greg/Desktop/code/itlogger/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR } from \"../actions/types\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return _objectSpread({}, state, {\n        logs: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","initialState","logs","current","loading","error","state","action","type","payload","console"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,kBAAlD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,QAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFf;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,WAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKJ,UAAL;AACEU,MAAAA,OAAO,CAACL,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
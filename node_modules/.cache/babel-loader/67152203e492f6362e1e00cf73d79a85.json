{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"; // Reducers work in Redux is we have a root reducer\n// and then any other reducer like our log reducer\n// we just bring them into that root\n\nimport rootReducer from \"./reducers\";\nconst initialState = {}; // an array of middleware\n\nconst middleware = [thunk];\nconst store = createStore( // needs to know which reducers you're working with\nrootReducer, initialState, // we'll add our thunk middleware\n// will also had the whole dev tools functionality\ncomposeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGP,WAAW,EACvB;AACAI,WAFuB,EAGvBC,YAHuB,EAIvB;AACA;AACAH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CANI,CAAzB;AASA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n// Reducers work in Redux is we have a root reducer\n// and then any other reducer like our log reducer\n// we just bring them into that root\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\n// an array of middleware\nconst middleware = [thunk];\n\nconst store = createStore(\n  // needs to know which reducers you're working with\n  rootReducer,\n  initialState,\n  // we'll add our thunk middleware\n  // will also had the whole dev tools functionality\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
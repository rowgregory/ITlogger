{"ast":null,"code":"import _slicedToArray from \"/Users/greg/Desktop/code/itlogger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/greg/Desktop/code/itlogger/src/components/logs/Logs.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Logs = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        logs = _useState2[0],\n        setLogs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"p\", {\n    className: \"collection-with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"colection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"System Logs\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"No logs to show\") : logs.map(log => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, log.message)));\n};\n\nexport default Logs;","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/components/logs/Logs.js"],"names":["React","useState","useEffect","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACOF,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACVG,IADU;AAAA,QACJC,OADI;;AAAA,qBAEaJ,QAAQ,CAAC,KAAD,CAFrB;AAAA;AAAA,QAEVK,OAFU;AAAA,QAEDC,UAFC;;AAIjBL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,GADO,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAY;AAC1BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AASA,MAAID,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIG,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,GAGCT,IAAI,CAACU,GAAL,CAASC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAG,CAACC,OAAT,CAAhB,CAPJ,CADF;AAYD,CAjCD;;AAmCA,eAAeb,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Logs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <h4>Loading...</h4>;\n  }\n  return (\n    <p className=\"collection-with-header\">\n      <li className=\"colection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show</p>\n      ) : (\n        logs.map(log => <li>{log.message}</li>)\n      )}\n    </p>\n  );\n};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/greg/Desktop/code/itlogger/src/components/techs/TechSelectOptions.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechSelectOptions = ({\n  getTechs,\n  tech: {\n    techs,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line\n  }, []);\n  return !loading && techs !== null && techs.map(t => React.createElement(\"option\", {\n    key: t.id,\n    value: \"\".concat(t.firstName, \" \").concat(t.lastName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, t.firstName, \" \", t.lastName));\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","connect","PropTypes","getTechs","TechSelectOptions","tech","techs","loading","map","t","id","firstName","lastName","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AACpEP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE,CAACI,OAAD,IACAD,KAAK,KAAK,IADV,IAEAA,KAAK,CAACE,GAAN,CAAUC,CAAC,IACT;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AAAmB,IAAA,KAAK,YAAKD,CAAC,CAACE,SAAP,cAAoBF,CAAC,CAACG,QAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,CAAC,CAACE,SADL,OACiBF,CAAC,CAACG,QADnB,CADF,CAHF;AASD,CAdD;;AAgBAR,iBAAiB,CAACS,SAAlB,GAA8B;AAC5BR,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADK;AAE5BZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeD;AAFG,CAA9B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CACpBgB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map(t => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTechs }\n)(TechSelectOptions);\n"]},"metadata":{},"sourceType":"module"}
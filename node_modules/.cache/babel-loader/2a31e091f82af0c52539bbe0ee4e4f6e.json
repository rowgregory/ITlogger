{"ast":null,"code":"import _slicedToArray from \"/Users/greg/Desktop/code/itlogger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/greg/Desktop/code/itlogger/src/components/logs/EditLogModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { updateLog } from \"../../actions/logActions\";\n\nconst EditLogModal = ({\n  current,\n  updateLog\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        attention = _useState4[0],\n        setAttention = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tech = _useState6[0],\n        setTech = _useState6[1];\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    console.log(current, \"CURRENT\");\n\n    if (message === \"\" || tech === \"\") {\n      M.toast({\n        html: \"Please enter a message and tech\"\n      });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      updateLog(updLog);\n      M.toast({\n        html: \"Log updated by \".concat(tech)\n      }); // Clear fields\n\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"tech\",\n    value: tech,\n    className: \"browser-default\",\n    onChange: e => setTech(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(\"option\", {\n    value: \"John Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"John Doe\"), React.createElement(\"option\", {\n    value: \"Sam Smith\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Sam Smith\"), React.createElement(\"option\", {\n    value: \"Sara Wilson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sara Wilson\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Needs Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect waves-light blue btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(EditLogModal);","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/components/logs/EditLogModal.js"],"names":["React","useState","useEffect","connect","PropTypes","M","updateLog","EditLogModal","current","message","setMessage","attention","setAttention","tech","setTech","onSubmit","console","log","toast","html","updLog","id","date","Date","modalStyle","e","target","value","propTypes","object","func","isRequired","width","height","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { updateLog } from \"../../actions/logActions\";\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    console.log(current, \"CURRENT\");\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <option value=\"John Doe\">John Doe</option>\n              <option value=\"Sam Smith\">Sam Smith</option>\n              <option value=\"Sara Wilson\">Sara Wilson</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect waves-light blue btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateLog }\n)(EditLogModal);\n"]},"metadata":{},"sourceType":"module"}
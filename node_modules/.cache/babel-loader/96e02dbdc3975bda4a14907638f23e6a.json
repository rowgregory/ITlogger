{"ast":null,"code":"import _objectSpread from \"/Users/greg/Desktop/code/itlogger/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR } from \"../actions/types\";\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return _objectSpread({}, state, {\n        techs: action.payload,\n        loading: false\n      });\n\n    case ADD_TECH:\n      return _objectSpread({}, state, {\n        techs: [...state.techs, action.payload],\n        loading: false\n      });\n\n    case DELETE_TECH:\n      return _objectSpread({}, state, {\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/reducers/techReducer.js"],"names":["GET_TECHS","ADD_TECH","DELETE_TECH","SET_LOADING","TECHS_ERROR","initialState","techs","loading","error","state","action","type","payload","filter","tech","id","console"],"mappings":";AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,SAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,QAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB,CAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,WAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA9C,CAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKJ,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKH,WAAL;AACEY,MAAAA,OAAO,CAACR,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOE,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
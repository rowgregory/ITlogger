{"ast":null,"code":"import _slicedToArray from \"/Users/greg/Desktop/code/itlogger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/greg/Desktop/code/itlogger/src/components/logs/AddLogModal.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addLog } from \"../../actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddLogModal = ({\n  addLog\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        attention = _useState4[0],\n        setAttention = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tech = _useState6[0],\n        setTech = _useState6[1];\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({\n        html: \"Please enter a message and tech\"\n      });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      addLog(newLog);\n      M.toast({\n        html: \"Log added by \".concat(tech)\n      }); // Clear fields\n\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"add-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"message\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Log Message\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"tech\",\n    value: tech,\n    className: \"browser-default\",\n    onChange: e => setTech(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(\"option\", {\n    value: \"John Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"John Doe\"), React.createElement(\"option\", {\n    value: \"Sam Smith\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sam Smith\"), React.createElement(\"option\", {\n    value: \"Sara Wilson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Sara Wilson\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Needs Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect waves-light blue btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nexport default connect(null, {\n  addLog\n})(AddLogModal);","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/components/logs/AddLogModal.js"],"names":["React","useState","connect","PropTypes","addLog","M","AddLogModal","message","setMessage","attention","setAttention","tech","setTech","onSubmit","toast","html","newLog","date","Date","modalStyle","e","target","value","propTypes","func","isRequired","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addLog } from \"../../actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n\n      addLog(newLog);\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // Clear fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            <label htmlFor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <option value=\"John Doe\">John Doe</option>\n              <option value=\"Sam Smith\">Sam Smith</option>\n              <option value=\"Sara Wilson\">Sara Wilson</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect waves-light blue btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nexport default connect(\n  null,\n  { addLog }\n)(AddLogModal);\n"]},"metadata":{},"sourceType":"module"}
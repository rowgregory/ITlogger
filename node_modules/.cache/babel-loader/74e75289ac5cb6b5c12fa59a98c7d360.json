{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG } from \"./types\"; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"./logs\");\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading(); //post request\n\n    const res = await fetch(\"/logs\", {\n      method: \"POST\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading(); //post request\n\n    await fetch(\"/logs/\".concat(id), {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/greg/Desktop/code/itlogger/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers","deleteLog","id"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,QAMO,SANP,C,CAQA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,QADC;AAEPa,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFf,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMM,MAAM,GAAGC,GAAG,IAAI,MAAMX,QAAN,IAAkB;AAC7C,MAAI;AACFC,IAAAA,UAAU,GADR,CAGF;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAU;AAC/BS,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAFyB;AAG/BK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHsB,KAAV,CAAvB;AAOA,UAAMZ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAET,OADC;AAEPU,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAjBD,CAiBE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFf,KAAD,CAAR;AAID;AACF,CAxBM;AA0BP,OAAO,MAAMa,SAAS,GAAGC,EAAE,IAAI,MAAMlB,QAAN,IAAkB;AAC/C,MAAI;AACFC,IAAAA,UAAU,GADR,CAGF;;AACA,UAAME,KAAK,iBAAUe,EAAV,GAAgB;AACzBN,MAAAA,MAAM,EAAE;AADiB,KAAhB,CAAX;AAIAZ,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEW;AAFF,KAAD,CAAR;AAID,GAZD,CAYE,OAAOV,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFf,KAAD,CAAR;AAID;AACF,CAnBM;AAqBP,OAAO,MAAMH,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG\n} from \"./types\";\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"./logs\");\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    //post request\n    const res = await fetch(\"/logs\", {\n      method: \"POST\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n\n    //post request\n    await fetch(`/logs/${id}`, {\n      method: \"DELETE\"\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n"]},"metadata":{},"sourceType":"module"}